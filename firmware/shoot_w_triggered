from machine import Pin, PWM
import utime

# Ultrasonic sensor pins
TRIG = Pin(17, Pin.OUT)
ECHO = Pin(16, Pin.IN)

# Servo motor setup
servo = PWM(Pin(4))
servo.freq(50)  # Servo PWM frequency (50Hz)

# Function to measure distance
def get_distance():
    TRIG.low()
    utime.sleep_us(2)
    TRIG.high()
    utime.sleep_us(10)
    TRIG.low()

    while ECHO.value() == 0:
        start_time = utime.ticks_us()
    while ECHO.value() == 1:
        end_time = utime.ticks_us()
    
    duration = end_time - start_time
    distance = (duration * 0.0343) / 2  # Convert to cm
    
    return distance

# Function to move the servo
def move_servo(angle):
    duty = int(1500 + (angle / 180) * 1000)  # Convert angle to duty cycle (500-2500us)
    servo.duty_u16(duty * 64)  # Convert to 16-bit resolution

# Main loop
while True:
    distance = get_distance()
    print(f"Distance: {distance:.2f} cm")

    if distance < 20:  # If object is within 20 cm
        print("Object detected! Moving servo.")
        move_servo(90)  # Move servo to 90 degrees
    else:
        move_servo(0)  # Reset servo position

    utime.sleep(0.5)  # Small delay to avoid excessive triggering

